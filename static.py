import re
import sqlite3 #–º–æ–¥—É–ª—å sqlite
import discord
from discord import emoji
from discord import embeds
from discord import message
from discord import member
from discord import channel #–º–æ–¥—É–ª—å discord api
from discord.ext import commands
from discord.ext.commands import context
from discord.ext.commands.core import command #–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –∫–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥
from discord_components import DiscordComponents, Button, ButtonStyle, component, interaction
from requests.models import Response
from tabulate import tabulate #—É–¥–æ–±–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü
import random
import asyncio
from asyncio import sleep
from discord.ext.commands import Bot
import os
import requests
from PIL import Image, ImageFont, ImageDraw, ImageFilter
import io
from random import choice
from asyncio import TimeoutError as AsyncTimeoutError
import aiohttp
import discord
import datetime
import warnings
from discord_components import DiscordComponents, Select, SelectOption, Button, ButtonStyle
from discord.utils import get
import random, string
from discord.ext.commands import cooldown
import json
import requests
from discord.ext.commands import has_permissions
import time
import smtplib

# –ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∞–π–¥–∏ –Ω–µ –∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏ –ø–æ–ª—å–∑—ã–≤–∞—Ç–µ–ª–µ–π ;)
whitelistuserscommand = ["727450233449218108", "835650277515460609", "696635462625918976"]
–∑–∞–±—Ä–∞—Ç—å—Ä–æ–ª—å—É—á–∞—Å—Ç–Ω–∏–∫–∞ = ["901458173389602866"]

t22 = 1

Borodach = ['727450233449218108']
dexstray = ['835650277515460609']

warnings.filterwarnings("ignore", category=DeprecationWarning)
client = commands.Bot(command_prefix="_")
intents = discord.Intents.all()

conn = sqlite3.connect("bot.db") # –∏–ª–∏ :memory:
cursor = conn.cursor()

@client.event
async def on_ready():
    DiscordComponents(client)
    cursor.execute("""CREATE TABLE IF NOT EXISTS shop (
        id   INTEGER PRIMARY KEY AUTOINCREMENT,
    type TEXT    UNIQUE
                 NOT NULL,
    name TEXT    UNIQUE
                 NOT NULL,
    cost INTEGER NOT NULL
                 UNIQUE
    )""")

    cursor.execute("""CREATE TABLE IF NOT EXISTS users (
        id        INTEGER PRIMARY KEY AUTOINCREMENT,
    nickname  TEXT    UNIQUE
                      NOT NULL,
    mention   TEXT    UNIQUE
                      NOT NULL,
    money     INTEGER,
    rep_rank  TEXT,
    inventory TEXT,
    lvl       INTEGER,
    xp        INTEGER
    )""")

    cursor.execute("""CRTATE TABLE IF NOT EXISTS buyers (
            id     INTEGER PRIMARY KEY AUTOINCREMENT,
    buyers TEXT    UNIQUE
                   NOT NULL
    )""")

    cursor.execute("""CREATE TABLE IF NOT EXISTS phone (
            id     INTEGER PRIMARY KEY AUTOINCREMENT,
    nickname2 TEXT    NOT NULL
                      UNIQUE,
    phone     INTEGER NOT NULL
                      CONSTRAINT [+71111111111] UNIQUE
    )""")

    cursor.execute('''CREATE RABLE IF NOT EXISTS servers (
    id INTEGER PRIMARY KEY AUTOINCREMENT
        )''')
conn.commit()

bot = commands.Bot(command_prefix="_", intents=intents)#–≤ —Å—Ç—Ä–æ—á–∫–µ command_prefix –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ª—é–±—ã–µ –∑–Ω–∞–∫, –±—É–∫–≤—É, —Å–ª–æ–≤–æ, —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏—è –∏ —Ç.–¥.
bot.session = aiohttp.ClientSession()
#–ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
bot.remove_command('help')


# You can set default values, if u want
# default_rooms_initted = False
# default_room_category_id = 804067147391172658
# default_room_creator_id = 927254214554554398

# room_category = 804067147391172658
# room_creator = 927254214554554398

# # https://discordpy.readthedocs.io/en/latest/api.html#discord.abc.GuildChannel.delete
# async def delete_channel(guild, channel_id):
#         channel = guild.get_channel(channel_id)
#         await channel.delete()

# # https://discordpy.readthedocs.io/en/latest/api.html#discord.Guild.create_voice_channel
# async def create_voice_channel(guild, channel_name):
#         channel = await guild.create_voice_channel(channel_name, category=room_category)
#         return channel

# def init_rooms():
#     if default_room_category_id != -1:
#         category_channel = bot.get_channel(default_room_category_id)
#         if category_channel:
#             global room_category
#             room_category = category_channel

#     if default_room_creator_id != -1:
#         create_channel = bot.get_channel(default_room_creator_id)
#         if create_channel:
#             global room_creator
#             room_creator = create_channel
  
#     global default_rooms_initted
#     default_rooms_initted = True



# # https://discordpy.readthedocs.io/en/latest/api.html#discord.on_voice_state_update
# @bot.event
# async def on_voice_state_update(member, before, after):
#     if not default_rooms_initted:
#         init_rooms()

#     if not room_category:
#         print("Set 'Temp rooms category' id first (temp_category_set)")
#         return False

#     if not room_creator:
#         print("Set 'Temp rooms creator' id first (temp_rooms_set)")
#         return False

#     if member.bot:
#         return False
  
#     # If user joined to the room creator channel
#     if after.channel == room_creator:
#         channel = await create_voice_channel(after.channel.guild, f'{member.name} room') # create new voice channel in temp rooms category
#         if channel is not None: # if we successfully created our new voice room
#             await member.move_to(channel) # move member to new room
#             await channel.set_permissions(member, manage_channels=True) # set perm-s to the member
  
#     # If user leaved temp room
#     if before.channel is not None:
#         if before.channel != room_creator and before.channel.category == room_category:
#             if len(before.channel.members) == 0:
#                 await delete_channel(before.channel.guild, before.channel.id)


@bot.event
async def on_member_join(ctx):
    channel = bot.get_channel(927261007833874483)
    await channel.edit(name = f"üë•Ô∏±–ª—é–¥–µ–π:{ctx.guild.member_count}")

@bot.event
async def on_member_remove(ctx):
    channel = bot.get_channel(927261007833874483)
    await channel.edit(name = f"üë•Ô∏±–ª—é–¥–µ–π:{ctx.guild.member_count}")





@bot.command()
async def addserverB(ctx):
    if not str(ctx.author.id) in Borodach:
        return
    else:
        cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            cursor.execute(f"INSERT INTO servers VALUES ({ctx.guild.id}, '{ctx.guild.name}')")#–≤–≤–æ–¥–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–± —Å–µ—Ä–≤–µ—Ä–µ –≤ –ë–î
                
            url1 = str(ctx.author.avatar_url)[:-10]
            emb = discord.Embed(title = 'C–µ—Ä–≤–µ—Ä:', color = discord.Color.green())
            
            emb.add_field( name = '–£—Å–ø–µ—à–Ω–æ –∑–∞–Ω–µ—Å–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö:', value = '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!')
            emb.set_thumbnail(url = url1)
            emb.set_footer(text = f'ID: {ctx.guild.id}')
            emb.set_author(name = f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {ctx.author.name}')
            await ctx.send(embed = emb)
        else:
            await ctx.send('–°–µ—Ä–≤–µ—Ä –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!')
        conn.commit()#–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î


@bot.command()
async def addserverD(ctx):
    if not str(ctx.author.id) in dexstray:
        return
    else:
        cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            cursor.execute(f"INSERT INTO servers VALUES ({ctx.guild.id}, '{ctx.guild.name}')")#–≤–≤–æ–¥–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–± —Å–µ—Ä–≤–µ—Ä–µ –≤ –ë–î
                
            url1 = str(ctx.author.avatar_url)[:-10]
            emb = discord.Embed(title = 'C–µ—Ä–≤–µ—Ä:', color = discord.Color.green())
            
            emb.add_field( name = '–£—Å–ø–µ—à–Ω–æ –∑–∞–Ω–µ—Å–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö:', value = '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!')
            emb.set_thumbnail(url = url1)
            emb.set_footer(text = f'ID: {ctx.guild.id}')
            emb.set_author(name = f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {ctx.author.name}')
            await ctx.send(embed = emb)
        else:
            await ctx.send('–°–µ—Ä–≤–µ—Ä –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!')
        conn.commit()#–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î


@bot.command()
async def blacklistB(ctx, member: discord.Member):
    if not str(ctx.author.id) in Borodach:
        return
    else:
        cursor.execute(f"SELECT id FROM blacklist where id={member.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            cursor.execute(f"INSERT INTO blacklist VALUES ({member.id}, '{member.name}')")#–≤–≤–æ–¥–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–± —Å–µ—Ä–≤–µ—Ä–µ –≤ –ë–î
            
            url1 = str(member.avatar_url)[:-10]
            emb = discord.Embed(title = 'Blacklist:', color = discord.Color.red())
            
            emb.add_field( name = f'–£—á–∞—Å—Ç–Ω–∏–∫ {member.name}', value = '–ó–∞–Ω–µ—Å–µ–Ω –≤ Blacklist!')
            emb.set_thumbnail(url = url1)
            emb.set_footer(text = f'ID: {member.id}')
            emb.set_author(name = f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {ctx.author.name}')
            await ctx.send(embed = emb)
        else:
            await ctx.send(f'–£—á–∞—Å—Ç–Ω–∏–∫ {member.name}, —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ Blacklist')
        conn.commit()#–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î


@bot.command()
async def blacklistD(ctx, member: discord.Member):
    if not str(ctx.author.id) in dexstray:
        return
    else:
        cursor.execute(f"SELECT id FROM blacklist where id={member.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            cursor.execute(f"INSERT INTO blacklist VALUES ({member.id}, '{member.name}')")#–≤–≤–æ–¥–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–± —Å–µ—Ä–≤–µ—Ä–µ –≤ –ë–î
            
            url1 = str(member.avatar_url)[:-10]
            emb = discord.Embed(title = 'Blacklist:', color = discord.Color.red())
            
            emb.add_field( name = f'–£—á–∞—Å—Ç–Ω–∏–∫ {member.name}', value = '–ó–∞–Ω–µ—Å–µ–Ω –≤ Blacklist!')
            emb.set_thumbnail(url = url1)
            emb.set_footer(text = f'ID: {member.id}')
            emb.set_author(name = f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {ctx.author.name}')
            await ctx.send(embed = emb)
        else:
            await ctx.send(f'–£—á–∞—Å—Ç–Ω–∏–∫ {member.name}, —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ Blacklist')
        conn.commit()#–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î

##################################################################################################################################### —Å—Ç–∞–≤–∫–∏
@bot.command()
@commands.has_permissions( administrator = True )
async def —Å—Ç–∞–≤–∫–∞(ctx):
    cursor.execute(f"SELECT id FROM blacklist where id={ctx.author.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
    if cursor.fetchone():#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
    else: 
        cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
        else:
            emb = discord.Embed(title = '–°—Ç–∞–≤–∫–∏:', color = discord.Color.blue())
            emb.add_field( name = f'{ctx.author.name}', value = '–ù–∞ –∫–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å?')
            message = await ctx.send(embed = emb)
            await message.add_reaction('üíú')
            await message.add_reaction('üß°')
            await message.add_reaction('üíö')

            def check(reaction, user):
                    return str(reaction.emoji) == 'üíú' and user != bot.user

            try:
                reaction, user = await bot.wait_for('reaction_add', timeout=20, check=check)
                emb = discord.Embed(title = '–°—Ç–∞–≤–∫–∞ –Ω–∞ üíú', color = discord.Color.purple())
                emb.add_field( name = f'{ctx.author.name}', value = '–°–∫–æ–ª—å–∫–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å?')
                message = await ctx.send(embed = emb)
                await message.add_reaction('2Ô∏è‚É£')
                await message.add_reaction('5Ô∏è‚É£')
                await message.add_reaction('üîü')
            except asyncio.TimeoutError:
        
                await ctx.send("**–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã—à–ª–æ!**")
            else:
                def check(reaction, user):
                    return str(reaction.emoji) == '2Ô∏è‚É£' and user != bot.user
            try:
                for row in cursor.execute(f"SELECT money FROM users where id={ctx.author.id}"):
                    money = row[0]
                    cost = 2000
                    if money >= cost:#–µ—Å–ª–∏ —É –≤–∞—Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥,—Ç–æ...
                            money -=cost
                            uid=ctx.author.id
                            for row in cursor.execute(f"SELECT money FROM users where id={ctx.author.id}"):
                                cursor.execute('UPDATE users SET money=? where id=?',(money -2000,uid))
                            reaction, user = await bot.wait_for('reaction_add', timeout=20, check=check)
                            emb = discord.Embed(title = '–°—Ç–∞–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!', color = discord.Color.purple())
                            emb.add_field( name = f'{ctx.author.name}', value = '–°–ø–∞—Å–∏–±–æ –∑–∞ —Å—Ç–∞–≤–∫—É –Ω–∞ –†–æ–∑–æ–≤—ã—Ö!')
                            message = await ctx.send(embed = emb)
                    else:
                        money < cost
                        emb = discord.Embed(title = '–°—Ç–∞–≤–∫–∞ –ù–ï –ø—Ä–∏–Ω—è—Ç–∞!', color = discord.Color.purple())
                        emb.add_field( name = f'{ctx.author.name}', value = '–£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!')
                        message = await ctx.send(embed = emb)
            except asyncio.TimeoutError:
                await ctx.send("**–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã—à–ª–æ!**")

            else:
                def check(reaction, user):
                    return str(reaction.emoji) == '5Ô∏è‚É£' and user != bot.user

            try:
                for row in cursor.execute(f"SELECT money FROM users where id={ctx.author.id}"):
                    money = row[0]
                    cost = 5000
                    if money >= cost:#–µ—Å–ª–∏ —É –≤–∞—Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥,—Ç–æ...
                            money -=cost
                            uid=ctx.author.id
                            for row in cursor.execute(f"SELECT money FROM users where id={ctx.author.id}"):
                                cursor.execute('UPDATE users SET money=? where id=?',(money -5000,uid))
                            reaction, user = await bot.wait_for('reaction_add', timeout=20, check=check)
                            emb = discord.Embed(title = '–°—Ç–∞–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!', color = discord.Color.purple())
                            emb.add_field( name = f'{ctx.author.name}', value = '–°–ø–∞—Å–∏–±–æ –∑–∞ —Å—Ç–∞–≤–∫—É –Ω–∞ –†–æ–∑–æ–≤—ã—Ö!')
                            message = await ctx.send(embed = emb)
                    else:
                        money < cost
                        emb = discord.Embed(title = '–°—Ç–∞–≤–∫–∞ –ù–ï –ø—Ä–∏–Ω—è—Ç–∞!', color = discord.Color.purple())
                        emb.add_field( name = f'{ctx.author.name}', value = '–£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!')
                        message = await ctx.send(embed = emb)
            except asyncio.TimeoutError:
                await ctx.send("**–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã—à–ª–æ!**")

            else:
                def check(reaction, user):
                    return str(reaction.emoji) == 'üîü' and user != bot.user
            try:
                for row in cursor.execute(f"SELECT money FROM users where id={ctx.author.id}"):
                    money = row[0]
                    cost = 10000
                    if money >= cost:#–µ—Å–ª–∏ —É –≤–∞—Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥,—Ç–æ...
                            money -=cost
                            uid=ctx.author.id
                            for row in cursor.execute(f"SELECT money FROM users where id={ctx.author.id}"):
                                cursor.execute('UPDATE users SET money=? where id=?',(money -10000,uid))
                            reaction, user = await bot.wait_for('reaction_add', timeout=20, check=check)
                            emb = discord.Embed(title = '–°—Ç–∞–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!', color = discord.Color.purple())
                            emb.add_field( name = f'{ctx.author.name}', value = '–°–ø–∞—Å–∏–±–æ –∑–∞ —Å—Ç–∞–≤–∫—É –Ω–∞ –†–æ–∑–æ–≤—ã—Ö!')
                            message = await ctx.send(embed = emb)
                    else:
                        money < cost
                        emb = discord.Embed(title = '–°—Ç–∞–≤–∫–∞ –ù–ï –ø—Ä–∏–Ω—è—Ç–∞!', color = discord.Color.purple())
                        emb.add_field( name = f'{ctx.author.name}', value = '–£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!')
                        message = await ctx.send(embed = emb)
            except asyncio.TimeoutError:
                await ctx.send("**–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã—à–ª–æ!**")    
##################################################################################################################################### –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
@bot.event
async def on_ready():
    TIMEOUT = 427398
    ID_CHANNEL = 921094923569217577
    channel = bot.get_channel(ID_CHANNEL)
    while True:
        await asyncio.sleep(TIMEOUT)
        await channel.send('**–ò–≥—Ä—ã –Ω–∞—á–Ω—É—Ç—Å—è —Å–µ–≥–æ–¥–Ω—è –≤ 15:10**')
##################################################################################################################################### 1 –∏–≥—Ä–∞ - 2 –∏–≥—Ä–∞
@bot.event
async def on_ready():
    TIMEOUT = 429328
    ID_CHANNEL = 922467213762523186
    channel = bot.get_channel(ID_CHANNEL)
    while True:
        await asyncio.sleep(TIMEOUT)
        msg = await channel.send("–î—É—ç–ª—å: **–ö—Ç–æ –ø–µ—Ä–≤—ã–π?**")
        await msg.add_reaction('üé®')
    
        def check(reaction, user):
                return str(reaction.emoji) == 'üé®' and user != bot.user
    
        try:
            # Timeout parameter is optional but sometimes can be useful
            reaction, user = await bot.wait_for('reaction_add', timeout=5, check=check)

            # Will wait until a user reacts with the specified checks then continue on with the code
            await channel.send(f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é {user.name} —Ç—ã –ü–æ–±–µ–¥–∏–ª(–∞)!")
        except asyncio.TimeoutError:
        
            # when wait_for reaches specified timeout duration (in this example it is 30 seconds)
            await channel.send("**–í—Ä–µ–º—è –≤—ã—à–ª–æ :(**")
##################################################################################################################################### 3 –∏–≥—Ä–∞ - 4 –∏–≥—Ä–∞
\
##################################################################################################################################### 5 –∏–≥—Ä–∞ - 6 –∏–≥—Ä–∞
\
##################################################################################################################################### 7 –∏–≥—Ä–∞ - 8 –∏–≥—Ä–∞
\
##################################################################################################################################### 9 –∏–≥—Ä–∞ - 10 –∏–≥—Ä–∞
\
#####################################################################################################################################

@bot.event
async def on_ready():
    print(f"{bot.user.name} is ready to go!")

async def timeout_user(*, user_id: int, guild_id: int, until):
    headers = {"Authorization": f"Bot {bot.http.token}"}
    url = f"https://discord.com/api/v9/guilds/{guild_id}/members/{user_id}"
    timeout = (datetime.datetime.utcnow() + datetime.timedelta(minutes=until)).isoformat()
    json = {'communication_disabled_until': timeout}
    async with bot.session.patch(url, json=json, headers=headers) as session:
        if session.status in range(200, 299):
           return True
        return False

@bot.command()
async def timeout(ctx: commands.Context, member: discord.Member, until: int):
    cursor.execute(f"SELECT id FROM blacklist where id={ctx.author.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
    if cursor.fetchone():#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        return
    else: 
        cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
        else:
            handshake = await timeout_user(user_id=member.id, guild_id=ctx.guild.id, until=until)
    if handshake:
         return await ctx.send(f"–£—á–∞—Å—Ç–Ω–∏–∫ {member.name} –±—ã–ª –ª–∏—à–µ–Ω –≥–æ–ª–æ—Å–∞ –Ω–∞ {until} –º–∏–Ω—É—Ç—ã/–º–∏–Ω—É—Ç.")
    await ctx.send("Something went wrong")


# async def selectboxTesting(ctx):
#     await ctx.send(content = "Select an option!", components = [Select(
#                                                   placeholder = 'Select Sothing!',
#                                                   options= [
#                                                       SelectOption(label = "Insquad", value = "1", description = "Purple Team", emoji = 'üü£'),
#                                                       SelectOption(label = "Sunrise", value = "2", description = "Orange Team", emoji = 'üü†'),
#                                                       SelectOption(label = "Sunrise", value = "3", description = "Green Team", emoji = 'üü¢'),
#                                                       SelectOption(label = "Rainbow", value = "4", description = "Rainbow Role", emoji = 'üåà')
#                                                   ],
#                                                   custom_id='SelectTesting'
#     )])

#     interaction = await bot.wait_for('select_option', check=lambda inter: inter.custom_id == 'SelectTesting' and inter.user == ctx.author)
#     res = interaction.values[0]

#     purple = discord.utils.get(ctx.message.guild.roles, name="–†–æ–∑–æ–≤—ã–µ")
#     orange = discord.utils.get(ctx.message.guild.roles, name="–û—Ä–∞–Ω–∂–µ–≤—ã–µ")
#     green = discord.utils.get(ctx.message.guild.roles, name="–ó–µ–ª–µ–Ω—ã–µ")

#     if res == '1':
#         await member.add_roles(purple)
#     elif res == '2':
#         await member.add_roles(orange)
#     elif res == '3':
#         await member.add_roles(green)

# @bot.command()
# async def testing(ctx):
#     await selectboxTesting(ctx)


@bot.event
async def on_member_join(ctx):
    cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
    if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        return
    else:
        img = Image.new('RGBA', (550, 130), '#f1c40f00')
        url = str(ctx.author.avatar_url)[:-10]

    response = requests.get(url, stream = True)
    card_channel = bot.get_channel(908371587621867540)

    if not response:
        await card_channel.send(f'{ctx.author.name} –¢–µ–±–µ –ø—Ä–∏–¥–µ—Ç—Å—è –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—É—é –∫–∞—Ä—Ç—É!')
        return
    else:
        response = Image.open(io.BytesIO(response.content))

        response = response.convert('RGBA')
        response = response.resize((100, 100), Image.ANTIALIAS)

        img.paste(response, (15, 15, 115, 115))

        idraw = ImageDraw.Draw(img)
        name = ctx.author.name
        tag = ctx.author.discriminator

        headline = ImageFont.truetype('days2.ttf', size = 20)
        undertext = ImageFont.truetype('days2.ttf', size = 12)
        ps = ImageFont.truetype('days2.ttf', size = 15)
        headline3 = ImageFont.truetype('days2.ttf', size = 10)

        idraw.text((145, 15), f'–î–æ–±—Ä–æ –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å {name}', font = headline)
        idraw.text((145, 50), f'–ù–∞ —Å–µ—Ä–≤–µ—Ä {ctx.guild.name}', font = ps)
        idraw.text((145, 75), f'–¢—ã {ctx.guild.member_count}th –£—á–∞—Å—Ç–Ω–∏–∫', font = ps)
        idraw.text((145, 105), f'ID: {ctx.author.id}', font = undertext)
        img.save('helloy.png')

        await card_channel.send(file = discord.File(fp = 'helloy.png'))


@bot.command(pass_context=True)
async def –≤–æ–ø—Ä–æ—Å(ctx, *, response):
    if not str(ctx.author.id) in Borodach:
        return
    else:
            await ctx.channel.purge(limit = 1)
            emb = discord.Embed(title = f'–û–ø—Ä–æ—Å', color = discord.Color.red())

            emb.add_field( name = '–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤', value = f'{response}')
            emb.set_thumbnail(url = 'https://i.ibb.co/8cD6Z0n/ece71c6d2eba5ee46e3246419882d86a-1.png')
            message = await ctx.send(embed = emb)
            await message.add_reaction('üëçüèø')
            await message.add_reaction('üëéüèø')

@bot.command(pass_context=True)
@cooldown(1, 15)  # 1000 second cooldown
@commands.dm_only()
async def –æ—Ç–≤–µ—Ç(ctx, *, response):
    sh = "" + ('').join(random.choices(string.ascii_letters + string.digits, k=8))
    tag = ctx.author.discriminator
    owner = bot.get_user(727450233449218108)
    emb = discord.Embed(title = f'–û—Ç–≤–µ—Ç', color = discord.Color.green())

    emb.add_field( name = f'–£—á–∞—Å—Ç–Ω–∏–∫–∞ - {ctx.author.name}', value = f'–û—Ç–≤–µ—Ç –ø—Ä–∏–Ω—è—Ç –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ!')
    emb.add_field( name = f'–í–∞—à —Å–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä "{sh}"', value = f'ID: {ctx.author.id}')
    emb.set_thumbnail(url = 'https://i.ibb.co/8cD6Z0n/ece71c6d2eba5ee46e3246419882d86a-1.png')
    await ctx.send(embed = emb)
    await owner.send(f"{ctx.author.name}#{tag} - {response}. –°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä: {sh}")

@bot.command()
async def tets(ctx, member: discord.Member, *, response2):
    cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
    if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        return
    else:
        await ctx.send('–ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—å—Å—è –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ... üïì')
        img = Image.new('RGBA', (1800, 2543), '#f1c40f00')
        url = ('https://i.ibb.co/Kq7q2Qk/file-3503.jpg')

    response = requests.get(url, stream = True)

    if not response:
        await ctx.send(f'{ctx.author.name} –¢–µ–±–µ –ø—Ä–∏–¥–µ—Ç—Å—è –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—É—é –∫–∞—Ä—Ç—É!')
        return
    else:
        response = Image.open(io.BytesIO(response.content))

        response = response.convert('RGBA')
        response = response.resize((1800, 2543))

        img.paste(response, (1, 1))

        idraw = ImageDraw.Draw(img)
        name = ctx.author.name
        tag = ctx.author.discriminator

        def check(m):
            return m.content == f"{response}" and m.channel == channel
        msg = await bot.wait_for("message", check=check)

        –§–ò–û = ImageFont.truetype('days2.ttf', size = 48)

        idraw.text((569, 465), f'{response2}', font = –§–ò–û, fill = '#000')
        idraw.text((569, 542), f'{response2}', font = –§–ò–û, fill = '#000')

        idraw.text((599, 465), f'{msg.member}', font = –§–ò–û, fill = '#000')
        idraw.text((599, 542), f'{msg.member}', font = –§–ò–û, fill = '#000')

        # idraw.text((145, 75), f'–¢—ã {ctx.guild.member_count}th –£—á–∞—Å—Ç–Ω–∏–∫', font = ps)
        # idraw.text((145, 105), f'ID: {ctx.author.id}', font = undertext)
               
        img.save('svadba.png')

        await ctx.send(file = discord.File(fp = 'svadba.png'))

@bot.command()
@cooldown(1, 50)
async def –∂–∞–ª–æ–±–∞(ctx, member: discord.Member, *, response):
    owner = bot.get_user(727450233449218108)
    emb = discord.Embed(title = f'–ñ–∞–ª–æ–±–∞', color = discord.Color.blue())
    url = str(ctx.author.avatar_url)[:-10]

    emb.add_field( name = f'–ñ–∞–ª–æ–±–∞ –Ω–∞ - {member}', value = f'–£—á–∞—Å—Ç–Ω–∏–∫–æ–º - {ctx.author.name}')
    emb.add_field( name = f'–ü–æ –ü—Ä–∏—á–∏–Ω–µ:', value = f'{response}')
    emb.set_thumbnail(url = url)
    await ctx.send(embed = emb)

    emb1 = discord.Embed(title = f'–ñ–∞–ª–æ–±–∞', color = discord.Color.blue())
    url = str(ctx.author.avatar_url)[:-10]
    tag = ctx.author.discriminator

    emb1.add_field( name = f'–ñ–∞–ª–æ–±–∞ –Ω–∞ - {member}', value = f'–£—á–∞—Å—Ç–Ω–∏–∫–æ–º - {ctx.author.name}#{tag}')
    emb1.add_field( name = f'–ü–æ –ü—Ä–∏—á–∏–Ω–µ:', value = f'{response}')
    emb1.set_thumbnail(url = url)

    message = await owner.send(embed = emb1)
    await message.add_reaction('üëç')
    await message.add_reaction('üëé')

    def check(reaction, user):
        return str(reaction.emoji) == 'üëç' and user != bot.user
    try:
        reaction, user = await bot.wait_for('reaction_add', timeout=86400, check=check)
        # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–æ–∂–∞–ª–æ–≤–∞–ª–∏—Å—å
        mem = bot.get_user(member.id)
        await timeout_user(user_id=member.id, guild_id=890976299579998288, until=1440)
        await ctx.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.name} –±—ã–ª –∑–∞–º—É—á–µ–Ω –Ω–∞ 1 –¥–µ–Ω—å, –ø–æ –ø—Ä–∏—á–∏–Ω–µ `{response}`")
        await mem.send(f"–í—ã –±—ã–ª–∏ –∑–∞–º—É—á–µ–Ω—ã –Ω–∞ 1 –¥–µ–Ω—å, –ø–æ –ø—Ä–∏—á–∏–Ω–µ –∂–∞–ª–æ–±—ã - `{response}` –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {ctx.author.name}")
    except asyncio.TimeoutError:
        await ctx.send("**–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã—à–ª–æ!**")

    def check(reaction, user):
        return str(reaction.emoji) == 'üëé' and user != bot.user
    try:
        reaction, user = await bot.wait_for('reaction_add', timeout=86400, check=check)
        # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∂–∞–ª–æ–≤–∞–ª—Å—è, –≤ —Å–ª—É—á–∞–∏ –µ—Å–ª–∏ –ª–æ–∂–Ω–∞—è –∂–∞–ª–æ–±–∞
        auth = bot.get_user(ctx.author.id)
        await timeout_user(user_id=ctx.author.id, guild_id=890976299579998288, until=1440)
        await ctx.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {ctx.author.name} –±—ã–ª –∑–∞–º—É—á–µ–Ω –Ω–∞ 1 –¥–µ–Ω—å, –ø–æ –ø—Ä–∏—á–∏–Ω–µ `–õ–æ–∂–Ω–∞ –∂–∞–ª–æ–±–∞`")
        await auth.send("–í—ã –±—ã–ª–∏ –∑–∞–º—É—á–µ–Ω—ã –Ω–∞ 1 –¥–µ–Ω—å, –ø–æ –ø—Ä–∏—á–∏–Ω–µ `–õ–æ–∂–Ω–∞—è –∂–∞–ª–æ–±–∞`")
    except asyncio.TimeoutError:
            await ctx.send("**–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã—à–ª–æ!**")

@bot.command()
async def —Ñ–µ–π–∫(ctx, member: discord.Member, *, response):
		colour = {
			"time": (114, 118, 125),
			"content": (220, 221, 222)
		}

		size = {
			"title": 20,
			"time": 13
		}

		font = 'Whitney-Medium.otf'

		if not member:
			member = ctx.author

		img = Image.new('RGB', (500, 115), color = (54,57,63))
		titlefnt = ImageFont.truetype(font, size["title"])
		timefnt = ImageFont.truetype(font, size["time"])
		d = ImageDraw.Draw(img)
		if member.nick is None:
			txt = member.name
		else:
			txt = member.nick
		color = member.color.to_rgb()
		if color == (0, 0, 0):
			color = (255,255,255)
		d.text((90, 20), txt, font=titlefnt, fill=color)
		h, w = d.textsize(txt, font=titlefnt)
		time = datetime.datetime.utcnow().strftime("Today at %I:%M %p")
		d.text((90+h+10, 25), time, font=timefnt, fill=colour["time"])
		d.text((90, 25+w), response, font=titlefnt, fill=colour["content"])

		img.save('img.png')
		if member.is_avatar_animated():
			await member.avatar_url_as().save("pfp.gif")
			f2 = Image.open("pfp.gif")
		else:
			await member.avatar_url_as().save("pfp.png")
			f2 = Image.open("pfp.png")
		f1 = Image.open("img.png")
		f2.thumbnail((50, 55))
		f2.save("pfp.png")

		f2 = Image.open("pfp.png").convert("RGB")

		mask = Image.new("L", f2.size, 0)
		draw = ImageDraw.Draw(mask)
		draw.ellipse((0, 0, f2.size[0], f2.size[1]), fill=255)
		mask = mask.filter(ImageFilter.GaussianBlur(0))

		result = f2.copy()
		result.putalpha(mask)

		result.save('pfp.png')

		f2 = Image.open("pfp.png")

		f3 = f1.copy()
		f3.paste(f2, (20, 20), f2)
		f3.save("img.png")

		file = discord.File("img.png")
		await ctx.send(file=file)

		try:
			os.remove("pfp.gif")
			os.remove("pfp.png")
			os.remove("img.png")
			await ctx.channel.purge(limit = 1)
		except:
			pass

def setup(bot):	
	bot.add_cog(—Ñ–µ–π–∫(bot))

try:
	bot.add_cog(—Ñ–µ–π–∫)
except:
	pass

@bot.command()
async def —Ä–æ–ª–∏(ctx):
    await ctx.channel.purge(limit = 1)
    emb = discord.Embed(title = '–†–æ–ª–∏', color = discord.Color.gold())

    emb.add_field( name = '–ü—Ä–æ–≥–µ—Ä –ê–Ω—Ç–æ—à–∞', value = '–†–æ–ª—å @Borodach`a')
    emb.add_field( name = '—Ä–∞–¥—É–≥–∞', value = '–ú–µ–Ω—è–µ—Ç —Ü–≤–µ—Ç –Ω–∏–∫–∞ —Ä–∞–∑ –≤ 10 —Å–µ–∫.')
    emb.add_field( name = '–°–æ–∑–¥–∞—Ç–µ–ª—å', value = '–°–æ–∑–¥–∞—Ç–µ–ª—å —Å–µ—Ä–≤–µ—Ä–∞')
    emb.add_field( name = 'Mute', value = '–†–æ–ª—å –∑–∞–º—É—á–µ–≥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞')
    emb.add_field( name = '–ì–ª–∞–≤–Ω—ã–π –ê–¥–º–∏–Ω', value = '–ì–ª–∞–≤–Ω—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–µ—Ä–≤–µ—Ä–∞')
    emb.add_field( name = '–ê–¥–º–∏–Ω', value = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–µ—Ä–≤–µ—Ä–∞')
    emb.add_field( name = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä', value = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä —Å–µ—Ä–≤–µ—Ä–∞')
    emb.add_field( name = '–ë–µ—Ç–∞ —Ç–µ—Å—Ç–µ—Ä—ã', value = '–ë–µ—Ç–∞ —Ç–µ—Å—Ç–µ—Ä—ã –±–æ—Ç–∞ –∏ –¥—Ä—É–≥–∏—Ö —Ñ–∏—á—å')
    emb.add_field( name = '–ú–ª–∞–¥—à–∏–π –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä', value = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä —Å —É–º–µ–Ω—à–µ–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏')
    emb.add_field( name = '–ë–æ—Ç—ã', value = '–ë–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞')
    emb.add_field( name = '–£—á–∞—Å—Ç–Ω–∏–∫–∞', value = '–†–æ–ª—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–µ—Ä–∏—Ñ–µ—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞')
    emb.add_field( name = '–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω', value = '–†–æ–ª—å –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    emb.add_field( name = '–†–æ–∑–æ–≤—ã–π', value = '–ö–æ–º–∞–Ω–¥–∞ –†–æ–∑–æ–≤—ã—Ö')
    emb.add_field( name = '–ó–µ–ª–µ–Ω—ã–π', value = '–ö–æ–º–∞–Ω–¥–∞ –ó–µ–ª–µ–Ω—ã—Ö')
    emb.add_field( name = '–û—Ä–∞–Ω–∂–µ–≤—ã–π', value = '–ö–æ–º–∞–Ω–¥–∞ –û—Ä–∞–Ω–∂–µ–≤—ã—Ö')
    emb.set_thumbnail(url = 'https://i.ibb.co/D7GhCyj/discord-colors-3.jpg')

    await ctx.send(embed = emb)


@bot.command()
async def —Å–µ—Ä–≤–µ—Ä–∞(ctx):
    if not str(ctx.author.id) in whitelistuserscommand:
        await ctx.send('–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –Ω–µ –¥–Ω—è –≤–∞—Å!')
        return
    pp = await ctx.send('''–ë–æ—Ç –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
------------------''')#—Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    for guild in bot.guilds:#—Ç.–∫. –±–æ—Ç –¥–ª—è –æ–¥–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞, —Ç–æ –∏ —Ü–∏–∫–ª –≤—ã–≤–æ–¥–∏—Ç –æ–¥–∏–Ω —Å–µ—Ä–≤–µ—Ä
        pp = print(guild.id)#–≤—ã–≤–æ–¥ id —Å–µ—Ä–≤–µ—Ä–∞
        pp = serv=guild#–±–µ–∑ –ø–æ–Ω—è—Ç–∏—è –∑–∞—á–µ–º —ç—Ç–æ
        await ctx.send(pp)
        for member in guild.members:#—Ü–∏–∫–ª, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
            cursor.execute(f"SELECT id FROM users where id={member.id}")#–ø—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –≤ –ë–î
            if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                cursor.execute(f"INSERT INTO users VALUES ({member.id}, '{member.name}', '<@{member.id}>', 2000, 'S','[]',1,1,0)")#–≤–≤–æ–¥–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–± —É—á–∞—Å—Ç–Ω–∏–∫–µ –≤ –ë–î
            else:#–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                pass
            conn.commit()#–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î

@bot.command(pass_context=True)
async def hug(ctx):
    user = choice(ctx.message.channel.guild.members)
    await ctx.send(f'{ctx.message.author.mention} hugged {user.mention}')


@bot.event
async def on_member_join(member):
    if welcome_channel := member.guild.get_channel(908371587621867540):
        await welcome_channel.send(f"–ü—Ä–∏–≤–µ—Ç, {member.mention} —Ç–≤–æ–π –∞–π–¥–∏ - {member.guild.name} –Ω–∞—à —Å–µ—Ä–≤–µ—Ä - {member.guild.name}")

@bot.command()
async def –ø–æ–∫—É–ø–∞—Ç–µ–ª–∏(ctx):
    if not str(ctx.author.id) in whitelistuserscommand:
        await ctx.send('–≠—Ç–∞ –∫–æ–º–º–∞–Ω–¥–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –Ω–µ –¥–Ω—è –≤–∞—Å!')
        return
    cursor.execute(f"SELECT id FROM blacklist where id={ctx.author.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
    if cursor.fetchone():#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        return
    else: 
        cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
        else:    
            table=[["id","buyers"]]
            for row in cursor.execute(f"SELECT id,buyers FROM buyers"):
                table.append([row[0],row[1]])
                await ctx.send(f">\n{tabulate(table)}")

@bot.command()
@commands.dm_only()
async def –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ(ctx):
    ctx.channel.type == discord.ChannelType.private
    await ctx.send(
        embed=discord.Embed(title="–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –ø—Ä–∏–º–µ—Ä: **_–Ω–æ–º–µ—Ä** +380111111111, +71111111111, ..."),
    components=[
            Button(style=ButtonStyle.URL, label="–ß—Ç–æ –∑–∞ –ø–æ–ª–∏—Ç–∏–∫–∞?", url="https://www.tiqets.com/ru/privacy-policy/")
        ]
    )
    

@bot.command()
async def —Å–∞–π—Ç(ctx):
        cursor.execute(f"SELECT id FROM blacklist where id={ctx.author.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone():#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
        else: 
            cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
            if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                return
            else:
                await ctx.send(
                embed=discord.Embed(title="–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!"),
                components=[
                    Button(style=ButtonStyle.URL, label="–ù–∞—à –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç", url="http://fumacrom.com/3CXdM"),
                    Button(style=ButtonStyle.green, label="–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ —Å–∞–π—Ç–µ", emoji="üí¨"),
            ]
        )

        revive = await bot.wait_for("button_click")
        if revive.channel == ctx.channel:
         if revive.component.label == "–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ —Å–∞–π—Ç–µ":
             await revive.edit_origin(
                 embed=discord.Embed(title="–û—Ç–∑—ã–≤"),
                 components=[
                    Button(style=ButtonStyle.green, label="–ú–Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è —Å–∞–π—Ç!", emoji="‚úÖ"),
                    Button(style=ButtonStyle.red, label="–ú–Ω–µ –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è —Å–∞–π—Ç!", emoji="‚ùå") 
                 ]
             )
        revive1 = await bot.wait_for("button_click")
        if revive1.channel == ctx.channel:
         if revive1.component.label == "–ú–Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è —Å–∞–π—Ç!":
             await revive1.edit_origin(content="–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!")
         else:
             await revive1.edit_origin(
                 embed=discord.Embed(title="–ß—Ç–æ —Ç–µ–±–µ –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å?:"),
                 components=[
                     Button(style=ButtonStyle.red, label="–ú–Ω–µ –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ", emoji="‚ùå"),
                     Button(style=ButtonStyle.red, label="–°–ª–∏—à–∫–æ–º –ø—Ä–æ—Å—Ç–æ–π", emoji="‚ùå"),
                     Button(style=ButtonStyle.red, label="–ù–µ –≤—Å–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –Ω–æ—Ä–º–∞–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞—é—Ç", emoji="‚ùå"),
                     Button(style=ButtonStyle.red, label="–°–∞–π—Ç –Ω–µ –æ—Ç–∫—Ä—ã–ª—Å—è", emoji="‚ùå"),
                     Button(style=ButtonStyle.red, label="–°—ã–ª–ª–∫–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç", emoji="‚ùå")
                 ]
             )

        revive2 = await bot.wait_for("button_click")
        if revive2.channel == ctx.channel:
         if revive2.component.label == "–ú–Ω–µ –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ":
             await revive2.edit_origin(content="–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤ –º—ã –ø—Ä–∏–º–µ–º –º–µ—Ä—ã!")
         if revive2.component.label == "–°–ª–∏—à–∫–æ–º –ø—Ä–æ—Å—Ç–æ–π":
            await revive2.edit_origin(content="–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤ –º—ã –ø—Ä–∏–º–µ–º –º–µ—Ä—ã!")
         if revive2.component.label == "–ù–µ –≤—Å–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –Ω–æ—Ä–º–∞–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞—é—Ç":
             await revive2.edit_origin(content="–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤ –º—ã –ø—Ä–∏–º–µ–º –º–µ—Ä—ã!")
         if revive2.component.label == "–°–∞–π—Ç –Ω–µ –æ—Ç–∫—Ä—ã–ª—Å—è":
             await revive2.edit_origin(content="–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤ –º—ã –ø—Ä–∏–º–µ–º –º–µ—Ä—ã!")
         if revive2.component.label == "–°—ã–ª–ª–∫–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç":
             await revive2.edit_origin(content="–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤ –º—ã –ø—Ä–∏–º–µ–º –º–µ—Ä—ã!")


@bot.command()
async def –∫—É–ø–∏—Ç—å(ctx):
    cursor.execute(f"SELECT id FROM blacklist where id={ctx.author.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
    if cursor.fetchone():#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        return
    else: 
        cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
        else:
            await ctx.send('''```css
            –ü—Ä–∏–≤–µ—Ç –¥—Ä—É–≥ —Å–µ–≥–æ–¥–Ω–µ—à–Ω–∏–π –ø—Ä–∞–π—Å –Ω–∞ –±–æ—Ç–æ–≤ —Ç—ã –º–æ–∂–µ—à—å —É–≤–∏–¥–µ—Ç—å –Ω–∏–∂–µ:
            @antosha22 - 500 RUB
            @antosha23 - –ñ–¥–∏—Ç–µ —Ä–µ–ª–∏–∑–∞!
            @antosha24 - –ñ–¥–∏—Ç–µ —Ä–µ–ª–∏–∑–∞!```''')

@bot.command()
@commands.has_permissions( administrator = True )
async def –∫–∏–∫–≤–æ–π—Å(ctx: commands.Context, user: discord.Member):
    cursor.execute(f"SELECT id FROM blacklist where id={ctx.author.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
    if cursor.fetchone():#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
    else: 
        cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
        else:
            await ctx.send(f'{user.mention} –ö–∏–∫–Ω—É—Ç —Å {user.voice.channel.mention}')
            await user.move_to(None)


@bot.command(aliases = ['–∫–∞—Ä—Ç–æ—á–∫–∞', '–∫–∞—Ä—Ç–∞', '–º–æ—è –∫–∞—Ä—Ç–∞'])
async def card_user(ctx):
    cursor.execute(f"SELECT id FROM blacklist where id={ctx.author.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
    if cursor.fetchone():#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
    else: 
        cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
        else:
            img = Image.new('RGBA', (390, 130), '#001a1a')
            url = str(ctx.author.avatar_url)[:-10]

            response = requests.get(url, stream = True)

            if not response:
                await ctx.send(f'{ctx.author.name} –¢–µ–±–µ –ø—Ä–∏–¥–µ—Ç—Å—è –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É, –¥—Ä—É–∂–æ—á–µ–∫!')
                return
            else:
                await ctx.channel.purge(limit = 1)
                response = Image.open(io.BytesIO(response.content))

            response = response.convert('RGBA')
            response = response.resize((100, 100), Image.ANTIALIAS)

            img.paste(response, (15, 15, 115, 115))

            idraw = ImageDraw.Draw(img)
            name = ctx.author.name
            tag = ctx.author.discriminator

            headline = ImageFont.truetype('days2.ttf', size = 20)
            undertext = ImageFont.truetype('days2.ttf', size = 12)
            ps = ImageFont.truetype('days2.ttf', size = 15)
            headline3 = ImageFont.truetype('days2.ttf', size = 10)

            idraw.text((145, 15), f'{name}#{tag}', font = headline)
            idraw.text((145, 50), f'ID: {ctx.author.id}', font = undertext)
            idraw.text((145, 75), f'P.S - –Ω–∞—à –ª—é–±–∏–º—ã–π\n–¥–æ–ª–±–æ–µ–±–∏–∫', font = ps)
            idraw.text((375, 10), '. .\nA\nR\nA\nM\nI\nR\nA', '#ffff56', font = headline3)
            img.save('user_card.png')

            await ctx.send(file = discord.File(fp = 'user_card.png'))


@bot.command()
@commands.has_permissions( administrator = True )
async def mute( ctx, member: discord.Member, time: int):
    emb = discord.Embed(title="–£—á–∞—Å—Ç–Ω–∏–∫ –ë—ã–ª –ó–∞–º—É—á–µ–Ω!", colour=discord.Color.green())

    emb.set_author(name=member.name, icon_url=member.avatar_url )
    emb.set_footer(text="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {}".format(ctx.author.name ), icon_url=ctx.author.avatar_url )
    
    await ctx.send(embed=emb)
    muted_role = discord.utils.get(ctx.message.guild.roles, name="Mute")
    e1 = discord.utils.get(ctx.message.guild.roles, name="–£—á–∞—Å—Ç–Ω–∏–∫")
    e2 = discord.utils.get(ctx.message.guild.roles, name="–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω")
    await member.add_roles(muted_role)
    await member.remove_roles(e1)
    await member.remove_roles(e2)
    
    # –°–ø–∏–º X —Å–µ–∫—É–Ω–¥, –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ —Å–Ω—è—Ç—å —Ä–æ–ª—å.
    await asyncio.sleep(time) 
    # –°–Ω–∏–º–∞–µ–º —Ä–æ–ª—å –∑–∞–º—É—á–µ–Ω–Ω–æ–≥–æ.
    await member.remove_roles(muted_role)
    await member.add_roles(e2)



@bot.command()
@commands.has_permissions( administrator = True )            
async def mlmoderator(ctx, member: discord.Member):
    cursor.execute(f"SELECT id FROM blacklist where id={ctx.author.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
    if cursor.fetchone():#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
    else: 
        cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
        else:
            await ctx.channel.purge(limit = 1)
            mlmoderator = discord.utils.get(ctx.message.guild.roles, name = '–ú–ª–∞–¥—à–∏–π –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä')
            await member.add_roles(mlmoderator)
            emb = discord.Embed(title = '–ú–ª. –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:', color = discord.Color.orange())
            emb.add_field( name = f'{member.name}', value = '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–≤—ã—à–µ–Ω–∏–µ–º!')

            url1 = str(member.avatar_url)[:-10]
            
            emb.set_thumbnail(url = url1)
            emb.set_footer(text = f'ID: {member.id}')
            emb.set_author(name = f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {ctx.author.name}')
            await ctx.send(embed = emb)

@bot.command()
@commands.has_permissions( administrator = True )            
async def moderator(ctx, member: discord.Member):
    cursor.execute(f"SELECT id FROM blacklist where id={ctx.author.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
    if cursor.fetchone():#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
    else: 
        cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
        else:
            await ctx.channel.purge(limit = 1)
            mlmoderator = discord.utils.get(ctx.message.guild.roles, name = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä')
            await member.add_roles(mlmoderator)
            emb = discord.Embed(title = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:', color = discord.Color.orange())
            emb.add_field( name = f'{member.name}', value = '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–≤—ã—à–µ–Ω–∏–µ–º!')

            url1 = str(member.avatar_url)[:-10]
            
            emb.set_thumbnail(url = url1)
            emb.set_footer(text = f'ID: {member.id}')
            emb.set_author(name = f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {ctx.author.name}')
            await ctx.send(embed = emb)

@bot.command()
@commands.has_permissions( administrator = True )            
async def administrator(ctx, member: discord.Member):
    cursor.execute(f"SELECT id FROM blacklist where id={ctx.author.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
    if cursor.fetchone():#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
    else: 
        cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
        else:
            await ctx.channel.purge(limit = 1)
            mlmoderator = discord.utils.get(ctx.message.guild.roles, name = '–ê–¥–º–∏–Ω')
            await member.add_roles(mlmoderator)
            emb = discord.Embed(title = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:', color = discord.Color.orange())
            emb.add_field( name = f'{member.name}', value = '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–≤—ã—à–µ–Ω–∏–µ–º!')

            url1 = str(member.avatar_url)[:-10]
            
            emb.set_thumbnail(url = url1)
            emb.set_footer(text = f'ID: {member.id}')
            emb.set_author(name = f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {ctx.author.name}')
            await ctx.send(embed = emb)

@bot.command()
@commands.has_permissions( administrator = True )            
async def gladministrator(ctx, member: discord.Member):
    cursor.execute(f"SELECT id FROM blacklist where id={ctx.author.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
    if cursor.fetchone():#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
    else: 
        cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
        else:
            await ctx.channel.purge(limit = 1)
            mlmoderator = discord.utils.get(ctx.message.guild.roles, name = '–ì–ª–∞–≤–Ω—ã–π –ê–¥–º–∏–Ω')
            await member.add_roles(mlmoderator)
            emb = discord.Embed(title = '–ì–ª–∞–≤–Ω—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:', color = discord.Color.orange())
            emb.add_field( name = f'{member.name}', value = '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–≤—ã—à–µ–Ω–∏–µ–º!')

            url1 = str(member.avatar_url)[:-10]
            
            emb.set_thumbnail(url = url1)
            emb.set_footer(text = f'ID: {member.id}')
            emb.set_author(name = f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {ctx.author.name}')
            await ctx.send(embed = emb)


##############################################################################################################################
@bot.command()
@commands.has_permissions( administrator = True )            
async def unmlmoderator(ctx, member: discord.Member):
    cursor.execute(f"SELECT id FROM blacklist where id={ctx.author.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
    if cursor.fetchone():#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
    else: 
        cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
        else:
            await ctx.channel.purge(limit = 1)
            mlmoderator = discord.utils.get(ctx.message.guild.roles, name = '–ú–ª–∞–¥—à–∏–π –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä')
            await member.remove_roles(mlmoderator)
            emb = discord.Embed(title = '–ú–ª. –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:', color = discord.Color.red())
            emb.add_field( name = f'{member.name}', value = '–û—Ç–æ–±—Ä–∞–Ω!')

            url1 = str(member.avatar_url)[:-10]
            
            emb.set_thumbnail(url = url1)
            emb.set_footer(text = f'ID: {member.id}')
            emb.set_author(name = f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {ctx.author.name}')
            await ctx.send(embed = emb)

@bot.command()
@commands.has_permissions( administrator = True )            
async def unmoderator(ctx, member: discord.Member):
    cursor.execute(f"SELECT id FROM blacklist where id={ctx.author.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
    if cursor.fetchone():#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
    else: 
        cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
        else:
            await ctx.channel.purge(limit = 1)
            mlmoderator = discord.utils.get(ctx.message.guild.roles, name = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä')
            await member.remove_roles(mlmoderator)
            emb = discord.Embed(title = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:', color = discord.Color.red())
            emb.add_field( name = f'{member.name}', value = '–û—Ç–æ–±—Ä–∞–Ω!')

            url1 = str(member.avatar_url)[:-10]
            
            emb.set_thumbnail(url = url1)
            emb.set_footer(text = f'ID: {member.id}')
            emb.set_author(name = f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {ctx.author.name}')
            await ctx.send(embed = emb)

@bot.command()
@commands.has_permissions( administrator = True )            
async def unadministrator(ctx, member: discord.Member):
    cursor.execute(f"SELECT id FROM blacklist where id={ctx.author.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
    if cursor.fetchone():#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
    else: 
        cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
        else:
            await ctx.channel.purge(limit = 1)
            mlmoderator = discord.utils.get(ctx.message.guild.roles, name = '–ê–¥–º–∏–Ω')
            await member.remove_roles(mlmoderator)
            emb = discord.Embed(title = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:', color = discord.Color.red())
            emb.add_field( name = f'{member.name}', value = '–û—Ç–æ–±—Ä–∞–Ω!')

            url1 = str(member.avatar_url)[:-10]
            
            emb.set_thumbnail(url = url1)
            emb.set_footer(text = f'ID: {member.id}')
            emb.set_author(name = f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {ctx.author.name}')
            await ctx.send(embed = emb)

@bot.command()
@commands.has_permissions( administrator = True )            
async def ungladministrator(ctx, member: discord.Member):
    cursor.execute(f"SELECT id FROM blacklist where id={ctx.author.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
    if cursor.fetchone():#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
    else: 
        cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
        else:
            await ctx.channel.purge(limit = 1)
            mlmoderator = discord.utils.get(ctx.message.guild.roles, name = '–ì–ª–∞–≤–Ω—ã–π –ê–¥–º–∏–Ω')
            await member.remove_roles(mlmoderator)
            emb = discord.Embed(title = '–ì–ª–∞–≤–Ω—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:', color = discord.Color.red())
            emb.add_field( name = f'{member.name}', value = '–û—Ç–æ–±—Ä–∞–Ω!')

            url1 = str(member.avatar_url)[:-10]
            
            emb.set_thumbnail(url = url1)
            emb.set_footer(text = f'ID: {member.id}')
            emb.set_author(name = f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {ctx.author.name}')
            await ctx.send(embed = emb)
##############################################################################################################################

@bot.command()
async def –ø–æ–≤—Ç–æ—Ä–∏(ctx):
    cursor.execute(f"SELECT id FROM blacklist where id={ctx.author.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
    if cursor.fetchone():#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
    else: 
        cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
        else:
            if ctx.message.reference and (msg := ctx.message.reference.resolved) and isinstance(msg, discord.Message):
                await ctx.send(msg.content)
            else:
                await ctx.send("–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.")


@bot.command()
async def –ø—Ä–æ—Ñ–∏–ª—å(ctx,member:discord.Member = None, guild: discord.Guild = None):
    await ctx.message.delete()
    if member == None:
        emb = discord.Embed(title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:", color=ctx.message.author.color)
        emb.add_field(name="Name:", value=ctx.message.author.display_name,inline=False)
        emb.add_field(name="ID:", value=ctx.message.author.id,inline=False)
        t = ctx.message.author.status
        if t == discord.Status.online:
            d = " –í —Å–µ—Ç–∏"

        t = ctx.message.author.status
        if t == discord.Status.offline:
            d = "‚ö™ –ù–µ –≤ —Å–µ—Ç–∏"

        t = ctx.message.author.status
        if t == discord.Status.idle:
            d = " –ù–µ –∞–∫—Ç–∏–≤–µ–Ω"

        t = ctx.message.author.status
        if t == discord.Status.dnd:
            d = " –ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å"

        emb.add_field(name="–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:", value=d,inline=False)
        emb.add_field(name="–°—Ç–∞—Ç—É—Å:", value=ctx.message.author.activity,inline=False)
        emb.add_field(name="–†–æ–ª—å:", value=f"{ctx.message.author.top_role.mention}",inline=False)
        emb.add_field(name="–ê–∫–∞—É–Ω—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω:", value=ctx.message.author.created_at.strftime("%a, %#d %B %Y, %I:%M %p UTC"),inline=False)
        emb.set_thumbnail(url=ctx.message.author.avatar_url)
        await ctx.send(embed = emb)
    else:
        emb = discord.Embed(title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:", color=member.color)
        emb.add_field(name="Name:", value=member.display_name,inline=False)
        emb.add_field(name="ID:", value=member.id,inline=False)
        t = member.status
        if t == discord.Status.online:
            d = " –í —Å–µ—Ç–∏"

        t = member.status
        if t == discord.Status.offline:
            d = "‚ö™ –ù–µ –≤ —Å–µ—Ç–∏"

        t = member.status
        if t == discord.Status.idle:
            d = " –ù–µ –∞–∫—Ç–∏–≤–µ–Ω"

        t = member.status
        if t == discord.Status.dnd:
            d = " –ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å"
        emb.add_field(name="–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:", value=d,inline=False)
        emb.add_field(name="–°—Ç–∞—Ç—É—Å:", value=member.activity,inline=False)
        emb.add_field(name="–†–æ–ª—å:", value=f"{member.top_role.mention}",inline=False)
        emb.add_field(name="–ê–∫–∞—É–Ω—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω:", value=member.created_at.strftime("%a, %#d %B %Y, %I:%M %p UTC"),inline=False)
        await ctx.send(embed = emb)


@bot.command(pass_context = True)
async def help(ctx):
        cursor.execute(f"SELECT id FROM blacklist where id={ctx.author.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone():#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
        else: 
            cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
            if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                return
            else:
                await ctx.channel.purge(limit = 1)
                emb = discord.Embed(title = '–ù–∞–≤–∏–≥–∞—Ü–∏—è', color = discord.Color.purple())

                emb.add_field( name = '_help', value = '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–µ—Ä–µ—á–µ–Ω—å –∫–æ–º–∞–Ω–¥')
                emb.add_field( name = '_–∞–∫–∫–∞—É–Ω—Ç', value = '–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å —Å–µ—Ä–≤–µ—Ä–∞')
                emb.add_field( name = '_mute', value = '–ó–∞–º—å—é—Ç–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞')
                emb.add_field( name = '_un_mute', value = '–†–∞–∑–º—å—é—Ç–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞')
                emb.add_field( name = '_–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ', value = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –Ω–æ–º–µ—Ä–∞')
                emb.add_field( name = '_–Ω–æ–º–µ—Ä +—Å–≤–æ–π–Ω–æ–º–µ—Ä', value = '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞')
                emb.add_field( name = '_—Ä–æ–ª—å', value = '–ü–æ–ª—É—á–∏—Ç—å —Ä–æ–ª—å –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è')
                emb.add_field( name = '_—Å–∞–π—Ç', value = '–ù–∞—à –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç')
                emb.add_field( name = '_–∫–∞—Ä—Ç–∞', value = '–ü–æ–ª—É—á–∏—Ç—å —Å–≤–æ—é –∫–∞—Ä—Ç—É —Å–µ—Ä–≤–µ—Ä–∞')
                emb.add_field( name = '_–∫–∏–∫–≤–æ–π—Å', value = '–ö–∏–∫–Ω—É—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ —Å –≤–æ–π—Å –∫–∞–Ω–∞–ª–∞')
                emb.add_field( name = '_—Å–µ—Ä–≤–µ—Ä–∞', value = '–°–µ–∫—Ä–µ—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞')
                emb.add_field( name = '_–∫—É–ø–∏—Ç—å', value = '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ü–µ–Ω—É –Ω–∞ –±–æ—Ç–æ–≤')
                emb.add_field( name = '_–ø–æ–∫—É–ø–∞—Ç–µ–ª–∏', value = '–ö—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫—É–ø–∏–ª –±–æ—Ç–∞')
                emb.add_field( name = '_clear', value = '–û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç')
                emb.add_field( name = '_addserverB, D', value = '–ó–∞–Ω–µ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–¥–ª—è –æ—Å–æ–±—ã—Ö –ª—é–¥–µ–π)')
                emb.add_field( name = '_blacklistB, D', value = '–ó–∞–Ω–µ—Å—Ç–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ –±–ª—ç–∫ –ª–∏—Å—Ç (–¥–ª—è –æ—Å–æ–±—ã—Ö –ª—é–¥–µ–π)')
                emb.add_field( name = '_mlmoderator', value = '–í—ã–¥–∞—Ç—å –ú–ª–∞–¥—à–µ–≥–æ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞')
                emb.add_field( name = '_moderator', value = '–í—ã–¥–∞—Ç—å –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞')
                emb.add_field( name = '_adminisrator', value = '–í—ã–¥–∞—Ç—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
                emb.add_field( name = '_gladminisrator', value = '–í—ã–¥–∞—Ç—å –ì–ª–∞–≤–Ω–æ–≥–æ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
                emb.add_field( name = '_unmlmoderator', value = '–û—Ç–æ–±—Ä–∞—Ç—å –ú–ª–∞–¥—à–µ–≥–æ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞')
                emb.add_field( name = '_unmoderator', value = '–û—Ç–æ–±—Ä–∞—Ç—å –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞')
                emb.add_field( name = '_unadminisrator', value = '–û—Ç–æ–±—Ä–∞—Ç—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
                emb.add_field( name = '_ungladminisrator', value = '–û—Ç–æ–±—Ä–∞—Ç—å –ì–ª–∞–≤–Ω–æ–≥–æ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
                emb.add_field( name = '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã:', value = '‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ')
                emb.set_thumbnail(url = 'https://i.ibb.co/8cD6Z0n/ece71c6d2eba5ee46e3246419882d86a-1.png')

                await ctx.send(embed = emb)


@bot.command(pass_context = True)
async def clear(ctx, amount = 500):
    cursor.execute(f"SELECT id FROM blacklist where id={ctx.author.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
    if cursor.fetchone():#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
    else: 
        cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
        else:
            await ctx.channel.purge(limit = amount)


@bot.event
async def on_member_remove(member, ctx):
    cursor.execute(f"SELECT id FROM blacklist where id={ctx.author.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
    if cursor.fetchone():#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
    else: 
        cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
        else:
            for ch in bot.get_guild(member.guild.id).channels:
                if ch.name == 'üëã„Ä°–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ':
                    await bot.get_channel(ch.id).send(f'–ù—É –∏ –≤–∞–ª–∏ >:( {member}')


@bot.command()
async def —Ä–æ–ª—å(ctx):
    cursor.execute(f"SELECT id FROM blacklist where id={ctx.author.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
    if cursor.fetchone():#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
    else: 
        cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
        else:
             cursor.execute(f"SELECT id FROM phone where id={ctx.author.id}")
             if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                 await ctx.send('–° –Ω–∞—á–∞–ª–æ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–π—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ –∫–æ–º–∞–Ω–¥–µ: _–Ω–æ–º–µ—Ä (—Å–≤–æ–π –Ω–æ–º–µ—Ä)!')
             else:
                 await ctx.channel.purge(limit = 1)

                 role = discord.utils.get(ctx.message.guild.roles, name = '–£—á–∞—Å—Ç–Ω–∏–∫')
                 rmfole = discord.utils.get(ctx.message.guild.roles, name = '–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω')
                 await ctx.author.add_roles(role)
                 await ctx.author.remove_roles(rmfole)
                 emb = discord.Embed(title = '–†–æ–ª—å')
                 emb.add_field( name = f'{ctx.author.name}', value = '**–†–æ–ª—å —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–∞, –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ø—Ä–æ–±—ã–≤–∞–Ω–∏–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!**')
                 await ctx.send(embed = emb)                


def send_email(message):
    sender = "mydiscorddbinoneclick@mail.ru"
    # your password = "your password"
    password = "FWDYnzhruaI0Skot0Vv2"

    server = smtplib.SMTP_SSL('smtp.mail.ru', 465)

    try:
        server.login(sender, password)
        server.sendmail(sender, sender, f"Subject: NEW REGISTRATION USER\n{message}")

        return "The message was sent successfully!"
    except Exception as _ex:
        return f"{_ex}\nCheck your login or password please!"


@bot.command()
@commands.dm_only()
async def number(ctx, *, response):
    cursor.execute(f"SELECT id FROM phone where id={ctx.author.id}")
    if len(response) < 11 or len(response) > 15:
        await ctx.send('–¢–∞–∫–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤—ã –±—ã–ª–∏ –∑–∞–º—É—á–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!')
        await timeout_user(user_id=member.id, guild_id=ctx.guild.id, until=2880)
    else:
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
             cursor.execute(f"INSERT INTO phone VALUES ({ctx.author.id}, '{ctx.message.author.name}', '{response}')")
             await ctx.send('–°–ø–∞—Å–∏–±–æ –∑–∞ —á–µ—Å—Ç–Ω–æ—Å—Ç—å, –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –ø—Ä–æ–≤–µ—Ä—è—Ç –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ! –î–∞–ª—å—à–µ –Ω–∞–ø—Ä–∞–≤–ª—è–π—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –≤ —á–∞—Ç —Ä–æ–ª—å –∏ –≤—Å—Ç–∞–≤—Ç–µ –∫–æ–º–∞–Ω–¥—É _—Ä–æ–ª—å')
             owner = bot.get_user(727450233449218108)
             user = (f'@{ctx.author.name}, ID: {ctx.author.id}, - {response}')
             await owner.send(f'{ctx.author.name}, ID: {ctx.author.id}, - {response}')
        else:#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
             await ctx.send('–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –Ω–∞–ø–∏—à–∏—Ç–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º —á—Ç–æ–±—ã –æ–Ω–∏ —Ä–µ—à–∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—É —Å–æ –≤—Ç–æ—Ä–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π!')
             pass
        conn.commit()


if __name__ == "__number__":
    number()

@bot.command()
async def –∞–∫–∫–∞—É–Ω—Ç(ctx): #–∫–æ–º–∞–Ω–¥–∞ _account (–≥–¥–µ "_", –≤–∞—à –ø—Ä–µ—Ñ–∏–∫—Å —É–∫–∞–∑–∞–Ω—ã–π –≤ –Ω–∞—á–∞–ª–µ)
    cursor.execute(f"SELECT id FROM blacklist where id={ctx.author.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
    if cursor.fetchone():#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
    else: 
        cursor.execute(f"SELECT id FROM servers where id={ctx.guild.id}")#—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä –≤ –ë–î
        if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return
        else:
            await ctx.channel.purge(limit = 1)
            table=[["nickname","lvl","xp","money"]]
            for row in cursor.execute(f"SELECT nickname,lvl,xp,money FROM users where id={ctx.author.id}"):
                table.append([row[0],row[1],row[2],row[3]])

            img = Image.new('RGBA', (390, 130), '#050514')
            url = str(ctx.author.avatar_url)[:-10]

            response = requests.get(url, stream = True)

            if not response:
                await ctx.send(f'{ctx.author.name} –¢–µ–±–µ –ø—Ä–∏–¥–µ—Ç—Å—è –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É, –¥—Ä—É–∂–æ—á–µ–∫!')
                return
            else:
                response = Image.open(io.BytesIO(response.content))
            response = response.convert('RGBA')
            response = response.resize((100, 100), Image.ANTIALIAS)

            img.paste(response, (15, 15, 115, 115))

            idraw = ImageDraw.Draw(img)
            name = ctx.author.name
            tag = ctx.author.discriminator

            headline = ImageFont.truetype('days2.ttf', size = 20)
            undertext = ImageFont.truetype('KarloCham-Line.otf', size = 18)
            ps = ImageFont.truetype('KarloCham-Line.otf', size = 18)
            headline2 = ImageFont.truetype('days2.ttf', size = 10)
            headline3 = ImageFont.truetype('days2.ttf', size = 10)
            headline4 = ImageFont.truetype('KarloCham-Line.otf', size = 18)

            idraw.text((145, 5), f'{name}#{tag}', font = headline)
            idraw.text((145, 35), f'Money - {row[3]}', font = headline4)
            idraw.text((145, 55), f'lvl - {row[1]}', font = undertext)
            idraw.text((145, 75), f'Xp - {row[2]}', font = ps)
            idraw.text((145, 105), f'ID: {ctx.author.id}', font = headline2)
            idraw.text((375, 10), '. .\nA\nR\nA\nM\nI\nR\nA', '#ffff56', font = headline3)

            img.save('akaunt_card.png')

            await ctx.send(file = discord.File(fp = 'akaunt_card.png'))


    conn.commit()#–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î


# –†–µ–∫–ª–∞–º–∞ 100 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ = 30 —Ä—É–±(–Ω–∞ –Ω–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ)

# @bot.command()
# async def jlby(ctx):
#      await ctx.channel.purge(limit = 1)
#      emb = discord.Embed(title = '–î–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä –ê—Ä–∞–º–∏—Ä–∞', color = discord.Color.red())
#      emb.add_field( name = '–û–ø–∏—Å–∞–Ω–∏–µ:', value = '–•–æ—Ä–æ—à–∏–π –¥–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä –≥–¥–µ –º–æ–∂–Ω–æ –ø–æ —á–∏–ª–∏—Ç—å, —Ö–æ—Ä–æ—à–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è , –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å —É–º–Ω—ã–º–∏ –ª—é–¥—å–º–∏ –∏ –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É!')
#      emb.set_thumbnail(url = 'https://i.ibb.co/yhq4NNJ/7055fb23a39b38ca42446f3596ca3591.png')
#      emb.set_footer(text = 'ID: 835650277515460609')
#      emb.add_field( name = 'üìé„Ä°–°—Å—ã–ª–∫–∞ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:', value = 'https://discord.gg/zyD5DCPx')
#      emb.add_field( name = '–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:', value = '14 üë§')
#      emb.set_author(name = '–í–ª–∞–¥–µ–ª–µ—Ü: dextrey')
#      await ctx.send(embed = emb)




@bot.event
async def on_member_join(member):
    cursor.execute(f"SELECT id FROM users where id={member.id}")#–≤—Å–µ —Ç–∞–∫–∂–µ, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –≤ –ë–î
    if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        cursor.execute(f"INSERT INTO users VALUES ({member.id}, '{member.name}', '<@{member.id}>', 50000, 'S','[]',1,1)")#–≤–≤–æ–¥–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–± —É—á–∞—Å—Ç–Ω–∏–∫–µ –≤ –ë–î
        channel = bot.get_channel(908371587621867540)
        await channel.send(f'–£ –Ω–∞—Å –Ω–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ - {member.name}#{member.discriminator}, ID: {member.id}, –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å:)')
    else:#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        pass
    conn.commit()#–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î

@bot.event
async def on_message(message):
    if len(message.content) > 30:#–∑–∞ –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª–∏–Ω–æ–π > 10 —Å–∏–º–≤–æ–ª–æ–≤...
        for row in cursor.execute(f"SELECT xp,lvl FROM users where id={message.author.id}"):
            expi=row[0]+random.randint(5, 40)#–∫ –æ–ø—ã—Ç—É –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ
            cursor.execute(f'UPDATE users SET xp={expi} where id={message.author.id}')
            lvch=expi/(row[1]*1)
            print(int(lvch))
            lv=int(lvch)
            if row[1] < lv:#–µ—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –º–µ–Ω—å—à–µ —É—Ä–æ–≤–Ω—è, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª —Ä–∞—Å—Å—á–∏—Ç–∞–Ω —Ñ–æ—Ä–º—É–ª–æ–π –≤—ã—à–µ,...
                await message.channel.send(f'–ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å!')#—Ç–æ –ø–æ—è–≤–ª—è–µ—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ...
                bal=1*lv
                cursor.execute(f'UPDATE users SET lvl={lv} where id={message.author.id}')#–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–ª—É—á–∞–µ—Ç –¥–µ–Ω—å–≥–∏
    await bot.process_commands(message)#–î–∞–ª–µ–µ —ç—Ç–æ –±—É–¥–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è ctx –∫–æ–º–∞–Ω–¥
    conn.commit()#–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î

with open('.env', 'r') as file:
    line = file.readline()
    try:
        os.environ[line[:line.find("=")]]=line[line.find("=")+1:]
    except ValueError:
        pass

bot.run()
